From: =?utf-8?q?Timo_R=C3=B6hling?= <roehling@debian.org>
Date: Wed, 9 Feb 2022 01:28:47 +0100
Subject: Fix implementation for 32 bit size_t

---
 faiss/index_factory.cpp                | 2 +-
 faiss/invlists/OnDiskInvertedLists.cpp | 5 +++--
 faiss/utils/utils.cpp                  | 2 +-
 3 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/faiss/index_factory.cpp b/faiss/index_factory.cpp
index 0d61b73..883753e 100644
--- a/faiss/index_factory.cpp
+++ b/faiss/index_factory.cpp
@@ -731,7 +731,7 @@ std::unique_ptr<Index> index_factory_sub(
     }
 
     if (verbose) {
-        printf("after () normalization: %s %ld parenthesis indexes d=%d\n",
+        printf("after () normalization: %s %zu parenthesis indexes d=%d\n",
                description.c_str(),
                parenthesis_indexes.size(),
                d);
diff --git a/faiss/invlists/OnDiskInvertedLists.cpp b/faiss/invlists/OnDiskInvertedLists.cpp
index 3017d16..2c234d7 100644
--- a/faiss/invlists/OnDiskInvertedLists.cpp
+++ b/faiss/invlists/OnDiskInvertedLists.cpp
@@ -11,6 +11,7 @@
 
 #include <pthread.h>
 
+#include <limits>
 #include <unordered_set>
 
 #include <sys/mman.h>
@@ -524,7 +525,7 @@ void OnDiskInvertedLists::free_slot(size_t offset, size_t capacity) {
         it++;
     }
 
-    size_t inf = ((size_t)1) << 60;
+    size_t inf = (std::numeric_limits<size_t>::max() - (std::numeric_limits<size_t>::max() >> 1)) >> 1;
 
     size_t end_prev = inf;
     if (it != slots.begin()) {
@@ -533,7 +534,7 @@ void OnDiskInvertedLists::free_slot(size_t offset, size_t capacity) {
         end_prev = prev->offset + prev->capacity;
     }
 
-    size_t begin_next = ((size_t)1) << 60;
+    size_t begin_next = inf;
     if (it != slots.end()) {
         begin_next = it->offset;
     }
diff --git a/faiss/utils/utils.cpp b/faiss/utils/utils.cpp
index dc6fadd..147afb5 100644
--- a/faiss/utils/utils.cpp
+++ b/faiss/utils/utils.cpp
@@ -169,7 +169,7 @@ size_t get_mem_usage_kb() {
         char buf[256];
         if (!fgets(buf, 256, f))
             break;
-        if (sscanf(buf, "VmRSS: %ld kB", &sz) == 1)
+        if (sscanf(buf, "VmRSS: %zu kB", &sz) == 1)
             break;
     }
     fclose(f);
